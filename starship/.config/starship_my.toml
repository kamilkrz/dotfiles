format = """
[](fg:#33658A)$username[](bg:#cccccc fg:#33658A)\
$git_branch$git_status[](bg:#33658A fg:#cccccc)\
$aws[](bg:#cccccc fg:#33658A)\
${custom.tfenv}[](fg:#cccccc bg:#33658a)\
$python[](fg:#33658A bg:#cccccc)\
[](fg:#cccccc)\
$fill\
[](fg:#cccccc)$cmd_duration\
[](fg:#33658A bg:#cccccc)$time\
[](fg:#33658A)
$directory\
$character\
"""

[directory]
style = "fg:#33658A"
format = "[ $path ]($style)"

truncation_length = 3
truncation_symbol = "…/"

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
#"nck" = " "
#"ck" = " "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
# Keep in mind that the order matters. For example:
# "Important Documents" = "  "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important  " = "  "



# You can also replace your username with a neat symbol like  to save some space

[username]
style_user = "bg:#33658A"
style_root = "bg:#9A348E"
format = '[$user ]($style)'

show_always = true

[git_branch]
symbol = ""
style = "bg:#cccccc fg:#33658A"
format = '[ $symbol $branch ]($style)'

[git_status]
style = "bg:#cccccc fg:#33658A"
format = '[( $all_status$ahead_behind )]($style)'

[aws]
symbol = " "
style = "bg:#33658A fg:#cccccc"
format = '[$symbol($profile )(\($region\) )($duration )]($style)'

[aws.region_aliases]
eu-west-1 = "euw1"
eu-central-1 = "euc1"
us-east-1 = "use1"
#[aws.profile_aliases]
#CompanyGroupFrobozzOnCallAccess = 'Frobozz'

[terraform]
format = "[$symbol$version]($style) "
disabled = true

[custom.tfenv]
symbol="💠"
style="fg:#33658a bg:#cccccc"
format=  '$symbol[ $output]($style)'

command = "cat .terraform-version"
detect_files = [".terraform-version"]

[docker_context]
symbol = " "
style = "bg:#06969A"
format = '[[ $symbol $context ](bg:#06969A)]($style) $path'

[python]
symbol = " "
style = "bg:#cccccc fg:#44658A"
format = '${symbol}[${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'

pyenv_version_name = false
detect_extensions = []
# Display the version of python from inside a local venv.
#
# Note this will only work when the venv is inside the project and it will only
# work in the directory that contains the venv dir but maybe this is ok?
python_binary = ["./venv/bin/python"]

[time]
style = "bg:#33658A fg:#cccccc"
format = '[  $time ]($style)'

disabled = false
time_format = "%R" # Hour:Minute Format

[cmd_duration]
style = "fg:#33658A bg:#cccccc"
format = "[  $duration]($style)"

[fill]
symbol = " "

# Disable the blank line at the start of the prompt
[line_break]
disabled = false
#
